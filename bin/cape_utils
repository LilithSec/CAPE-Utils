#!/usr/bin/env perl

use CAPE::Utils;
use strict;
use warnings;
use Getopt::Long;
use JSON;

sub version {
	print "cape_utils v. 0.0.1\n";
}

sub help {
	&version;

	print '
-c <ini>     Config INI file.
             Default: /usr/local/etc/cape_utils.ini
';
}

# get the commandline options
my $help    = 0;
my $version = 0;
my $ini_file;
my $action;
my $count;
my $use_json;
my $where;
my $clock;
my $timeout;
my $machine;
my $package;
my $options;
my $random = 1;
my $tags;
my $platform;
my $enforce_timeout;
my $custom;
Getopt::Long::Configure('no_ignore_case');
Getopt::Long::Configure('bundling');
GetOptions(
	'version'         => \$version,
	'v'               => \$version,
	'help'            => \$help,
	'h'               => \$help,
	'i=s'             => \$ini_file,
	'a=s'             => \$action,
	'C'               => \$count,
	'w=s'             => \$where,
	'clock=s'         => \$clock,
	'timeout=i'       => \$timeout,
	'machine=s'       => \$machine,
	'package=s'       => \$package,
	'options=s'       => \$options,
	'random=i'        => \$random,
	'tags=s'          => \$tags,
	'platform=s'      => \$tags,
	'et'              => \$enforce_timeout,
	'enforce_timeout' => \$enforce_timeout,
	'custom'          => \$custom,
);

my $cape_utils = CAPE::Utils->new($ini_file);

if (! defined($action)) {
	print "No action specified via -a";
	exit 1;
}

if ( $action eq 'pending' ) {
	if ($count) {
		print $cape_utils->get_pending_count( where => $where ) . "\n";
	}
	else {
		print $cape_utils->get_pending_table( where => $where );
	}
	exit 0;
}

if ( $action eq 'running' ) {
	if ($count) {
		print $cape_utils->get_running_count( where => $where ) . "\n";
	}
	else {
		print $cape_utils->get_running_table( where => $where );
	}
	exit 0;
}

if ( $action eq 'submit' ) {
	$cape_utils->submit(
		items           => \@ARGV,
		clock           => $clock,
		timeout         => $timeout,
		machine         => $machine,
		package         => $package,
		options         => $options,
		random          => $random,
		tags            => $tags,
		enforce_timeout => $enforce_timeout,
	);
}

if ( $action eq 'fail' ) {
	if ($count) {
		print $cape_utils->fail( where => $where ) . "\n";
	}
	else {
		print $cape_utils->fail( where => $where );
	}
	exit 0;
}
